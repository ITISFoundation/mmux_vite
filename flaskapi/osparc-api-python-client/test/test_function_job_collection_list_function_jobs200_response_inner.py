# coding: utf-8

"""
    osparc.io public API

    osparc-simcore public API specifications

    The version of the OpenAPI document: 0.7.1.post0.dev0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from osparc_client.models.function_job_collection_list_function_jobs200_response_inner import FunctionJobCollectionListFunctionJobs200ResponseInner

class TestFunctionJobCollectionListFunctionJobs200ResponseInner(unittest.TestCase):
    """FunctionJobCollectionListFunctionJobs200ResponseInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> FunctionJobCollectionListFunctionJobs200ResponseInner:
        """Test FunctionJobCollectionListFunctionJobs200ResponseInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `FunctionJobCollectionListFunctionJobs200ResponseInner`
        """
        model = FunctionJobCollectionListFunctionJobs200ResponseInner()
        if include_optional:
            return FunctionJobCollectionListFunctionJobs200ResponseInner(
                title = '',
                description = '',
                function_uid = '',
                inputs = osparc_client.models.inputs.inputs(),
                outputs = osparc_client.models.outputs.outputs(),
                function_class = 'SOLVER',
                uid = '',
                project_job_id = '',
                solver_job_id = ''
            )
        else:
            return FunctionJobCollectionListFunctionJobs200ResponseInner(
                function_uid = '',
                inputs = osparc_client.models.inputs.inputs(),
                outputs = osparc_client.models.outputs.outputs(),
                uid = '',
                project_job_id = '',
                solver_job_id = '',
        )
        """

    def testFunctionJobCollectionListFunctionJobs200ResponseInner(self):
        """Test FunctionJobCollectionListFunctionJobs200ResponseInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
