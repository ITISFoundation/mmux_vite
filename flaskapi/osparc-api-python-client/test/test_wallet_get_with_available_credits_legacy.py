# coding: utf-8

"""
    osparc.io public API

    osparc-simcore public API specifications

    The version of the OpenAPI document: 0.8.0.post0.dev0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from osparc_client.models.wallet_get_with_available_credits_legacy import WalletGetWithAvailableCreditsLegacy

class TestWalletGetWithAvailableCreditsLegacy(unittest.TestCase):
    """WalletGetWithAvailableCreditsLegacy unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> WalletGetWithAvailableCreditsLegacy:
        """Test WalletGetWithAvailableCreditsLegacy
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `WalletGetWithAvailableCreditsLegacy`
        """
        model = WalletGetWithAvailableCreditsLegacy()
        if include_optional:
            return WalletGetWithAvailableCreditsLegacy(
                wallet_id = 0,
                name = '0',
                description = '',
                owner = 0,
                thumbnail = '',
                status = 'ACTIVE',
                created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                modified = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                available_credits = 0.0
            )
        else:
            return WalletGetWithAvailableCreditsLegacy(
                wallet_id = 0,
                name = '0',
                owner = 0,
                status = 'ACTIVE',
                created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                modified = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                available_credits = 0.0,
        )
        """

    def testWalletGetWithAvailableCreditsLegacy(self):
        """Test WalletGetWithAvailableCreditsLegacy"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
