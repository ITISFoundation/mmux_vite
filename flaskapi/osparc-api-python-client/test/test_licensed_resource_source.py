# coding: utf-8

"""
    osparc.io public API

    osparc-simcore public API specifications

    The version of the OpenAPI document: 0.7.1.post0.dev0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from osparc_client.models.licensed_resource_source import LicensedResourceSource

class TestLicensedResourceSource(unittest.TestCase):
    """LicensedResourceSource unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> LicensedResourceSource:
        """Test LicensedResourceSource
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `LicensedResourceSource`
        """
        model = LicensedResourceSource()
        if include_optional:
            return LicensedResourceSource(
                id = 56,
                description = '',
                thumbnail = '',
                features = osparc_client.models.licensed_resource_source_features_dict.LicensedResourceSourceFeaturesDict(
                    age = '', 
                    date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                    ethnicity = '', 
                    functionality = '', 
                    height = '', 
                    name = '', 
                    sex = '', 
                    species = '', 
                    version = '', 
                    weight = '', ),
                doi = '',
                license_key = '',
                license_version = '',
                protection = 'Code',
                available_from_url = '0'
            )
        else:
            return LicensedResourceSource(
                id = 56,
                description = '',
                thumbnail = '',
                features = osparc_client.models.licensed_resource_source_features_dict.LicensedResourceSourceFeaturesDict(
                    age = '', 
                    date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                    ethnicity = '', 
                    functionality = '', 
                    height = '', 
                    name = '', 
                    sex = '', 
                    species = '', 
                    version = '', 
                    weight = '', ),
                doi = '',
                license_key = '',
                license_version = '',
                protection = 'Code',
                available_from_url = '0',
        )
        """

    def testLicensedResourceSource(self):
        """Test LicensedResourceSource"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
