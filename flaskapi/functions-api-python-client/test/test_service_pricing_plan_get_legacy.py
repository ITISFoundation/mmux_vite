# coding: utf-8

"""
    osparc.io public API

    osparc-simcore public API specifications

    The version of the OpenAPI document: 0.7.1.post0.dev0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from osparc_client.models.service_pricing_plan_get_legacy import ServicePricingPlanGetLegacy

class TestServicePricingPlanGetLegacy(unittest.TestCase):
    """ServicePricingPlanGetLegacy unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ServicePricingPlanGetLegacy:
        """Test ServicePricingPlanGetLegacy
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ServicePricingPlanGetLegacy`
        """
        model = ServicePricingPlanGetLegacy()
        if include_optional:
            return ServicePricingPlanGetLegacy(
                pricing_plan_id = 0,
                display_name = '',
                description = '',
                classification = 'TIER',
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                pricing_plan_key = '',
                pricing_units = [
                    osparc_client.models.pricing_unit_get_legacy.PricingUnitGetLegacy(
                        pricing_unit_id = 0, 
                        unit_name = '', 
                        unit_extra_info = {
                            'key' : null
                            }, 
                        current_cost_per_unit = 0.0, 
                        default = True, )
                    ]
            )
        else:
            return ServicePricingPlanGetLegacy(
                pricing_plan_id = 0,
                display_name = '',
                description = '',
                classification = 'TIER',
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                pricing_plan_key = '',
                pricing_units = [
                    osparc_client.models.pricing_unit_get_legacy.PricingUnitGetLegacy(
                        pricing_unit_id = 0, 
                        unit_name = '', 
                        unit_extra_info = {
                            'key' : null
                            }, 
                        current_cost_per_unit = 0.0, 
                        default = True, )
                    ],
        )
        """

    def testServicePricingPlanGetLegacy(self):
        """Test ServicePricingPlanGetLegacy"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
