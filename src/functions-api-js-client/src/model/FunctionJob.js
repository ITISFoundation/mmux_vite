/**
 * Swagger Functions Store - OpenAPI 3.0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import JobStatus from './JobStatus';

/**
 * The FunctionJob model module.
 * @module model/FunctionJob
 * @version 0.0.1
 */
class FunctionJob {
    /**
     * Constructs a new <code>FunctionJob</code>.
     * @alias module:model/FunctionJob
     * @param functionID {Number} 
     */
    constructor(functionID) { 
        
        FunctionJob.initialize(this, functionID);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, functionID) { 
        obj['functionID'] = functionID;
    }

    /**
     * Constructs a <code>FunctionJob</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FunctionJob} obj Optional instance to populate.
     * @return {module:model/FunctionJob} The populated <code>FunctionJob</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FunctionJob();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('functionID')) {
                obj['functionID'] = ApiClient.convertToType(data['functionID'], 'Number');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = JobStatus.constructFromObject(data['status']);
            }
            if (data.hasOwnProperty('inputs')) {
                obj['inputs'] = ApiClient.convertToType(data['inputs'], Object);
            }
            if (data.hasOwnProperty('outputs')) {
                obj['outputs'] = ApiClient.convertToType(data['outputs'], Object);
            }
            if (data.hasOwnProperty('job_info')) {
                obj['job_info'] = ApiClient.convertToType(data['job_info'], Object);
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FunctionJob</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FunctionJob</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of FunctionJob.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }

        return true;
    }


}

FunctionJob.RequiredProperties = ["functionID"];

/**
 * @member {Number} id
 */
FunctionJob.prototype['id'] = undefined;

/**
 * @member {Number} functionID
 */
FunctionJob.prototype['functionID'] = undefined;

/**
 * @member {module:model/JobStatus} status
 */
FunctionJob.prototype['status'] = undefined;

/**
 * @member {Object} inputs
 */
FunctionJob.prototype['inputs'] = undefined;

/**
 * @member {Object} outputs
 */
FunctionJob.prototype['outputs'] = undefined;

/**
 * @member {Object} job_info
 */
FunctionJob.prototype['job_info'] = undefined;

/**
 * @member {Date} created_at
 */
FunctionJob.prototype['created_at'] = undefined;






export default FunctionJob;

