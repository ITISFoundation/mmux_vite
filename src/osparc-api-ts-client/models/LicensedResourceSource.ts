/**
 * osparc.io public API
 * osparc-simcore public API specifications
 *
 * OpenAPI spec version: 0.7.0.post0.dev0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { LicensedResourceSourceFeaturesDict } from '../models/LicensedResourceSourceFeaturesDict';
import { HttpFile } from '../http/http';

export class LicensedResourceSource {
    'id': number;
    'description': string;
    'thumbnail': string;
    'features': LicensedResourceSourceFeaturesDict;
    'doi': string | null;
    'licenseKey': string;
    'licenseVersion': string;
    'protection': LicensedResourceSourceProtectionEnum;
    'availableFromUrl': string | null;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "number",
            "format": ""
        },
        {
            "name": "description",
            "baseName": "description",
            "type": "string",
            "format": ""
        },
        {
            "name": "thumbnail",
            "baseName": "thumbnail",
            "type": "string",
            "format": ""
        },
        {
            "name": "features",
            "baseName": "features",
            "type": "LicensedResourceSourceFeaturesDict",
            "format": ""
        },
        {
            "name": "doi",
            "baseName": "doi",
            "type": "string",
            "format": ""
        },
        {
            "name": "licenseKey",
            "baseName": "license_key",
            "type": "string",
            "format": ""
        },
        {
            "name": "licenseVersion",
            "baseName": "license_version",
            "type": "string",
            "format": ""
        },
        {
            "name": "protection",
            "baseName": "protection",
            "type": "LicensedResourceSourceProtectionEnum",
            "format": ""
        },
        {
            "name": "availableFromUrl",
            "baseName": "available_from_url",
            "type": "string",
            "format": "uri"
        }    ];

    static getAttributeTypeMap() {
        return LicensedResourceSource.attributeTypeMap;
    }

    public constructor() {
    }
}

export enum LicensedResourceSourceProtectionEnum {
    Code = 'Code',
    PayPal = 'PayPal'
}

